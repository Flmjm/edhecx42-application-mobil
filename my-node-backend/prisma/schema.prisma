datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  password          String?
  displayName       String?
  allergies         String?
  preferences       String?
  dietStyle         String?
  productsToAvoid   String?
  budget            Float?
  createdAt         DateTime @default(now())
  knorrPosts        KnorrPost[]
  knorrUserProfiles KnorrUserProfile[]
  comments          Comment[]
  shoppingLists     ShoppingList[]
  fridgeItems       FridgeItem[]
  stats             Stat[]
  rewards           KnorrReward[]
  challenges        UserChallenge[]
}

model KnorrPost {
  id        String   @id @default(cuid())
  userId    String
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model KnorrUserProfile {
  id      String @id @default(cuid())
  userId  String
  profile String
  user    User   @relation(fields: [userId], references: [id])
}

model Comment {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  content   String
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model ShoppingList {
  id      String @id @default(cuid())
  userId  String
  items   String
  user    User   @relation(fields: [userId], references: [id])
}

model FridgeItem {
  id         String    @id @default(cuid())
  userId     String
  name       String
  quantity   Int       @default(1)
  expiryDate DateTime?
  zone       String?
  category   String?
  addedAt    DateTime  @default(now())
  user       User?     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
}

model Stat {
  id      String @id @default(cuid())
  userId  String
  data    String
  user    User   @relation(fields: [userId], references: [id])
}

model KnorrReward {
  id      String @id @default(cuid())
  name    String
  userId  String
  user    User   @relation(fields: [userId], references: [id])
}

model UserChallenge {
  id      String @id @default(cuid())
  userId  String
  challenge String
  user    User   @relation(fields: [userId], references: [id])
}