
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  email: 'email',
  password: 'password',
  displayName: 'displayName',
  allergies: 'allergies',
  preferences: 'preferences',
  dietStyle: 'dietStyle',
  productsToAvoid: 'productsToAvoid',
  budget: 'budget'
};

exports.Prisma.KnorrPostScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  content: 'content',
  createdAt: 'createdAt'
};

exports.Prisma.KnorrUserProfileScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  profile: 'profile'
};

exports.Prisma.CommentScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  postId: 'postId',
  content: 'content',
  createdAt: 'createdAt'
};

exports.Prisma.ShoppingListScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  items: 'items'
};

exports.Prisma.FridgeItemScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  name: 'name',
  quantity: 'quantity'
};

exports.Prisma.StatScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  data: 'data'
};

exports.Prisma.KnorrRewardScalarFieldEnum = {
  id: 'id',
  name: 'name',
  userId: 'userId'
};

exports.Prisma.UserChallengeScalarFieldEnum = {
  id: 'id',
  userId: 'userId',
  challenge: 'challenge'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  KnorrPost: 'KnorrPost',
  KnorrUserProfile: 'KnorrUserProfile',
  Comment: 'Comment',
  ShoppingList: 'ShoppingList',
  FridgeItem: 'FridgeItem',
  Stat: 'Stat',
  KnorrReward: 'KnorrReward',
  UserChallenge: 'UserChallenge'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/hugolefevre/Documents/42/EDHEC/FoodApp/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/hugolefevre/Documents/42/EDHEC/FoodApp/my-node-backend/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null
  },
  "relativePath": "../../../my-node-backend/prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "datasource db {\n  provider = \"postgresql\" // ou \"sqlite\", \"mysql\", etc. selon votre choix\n  url      = env(\"DATABASE_URL\")\n}\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\nmodel User {\n  id                String             @id @default(cuid())\n  email             String             @unique\n  password          String?\n  displayName       String?\n  allergies         String?\n  preferences       String?\n  dietStyle         String?\n  productsToAvoid   String?\n  budget            Float?\n  knorrPosts        KnorrPost[]\n  knorrUserProfiles KnorrUserProfile[]\n  comments          Comment[]\n  shoppingLists     ShoppingList[]\n  fridgeItems       FridgeItem[]\n  stats             Stat[]\n  rewards           KnorrReward[]\n  challenges        UserChallenge[]\n}\n\nmodel KnorrPost {\n  id        String   @id @default(cuid())\n  userId    String\n  content   String\n  createdAt DateTime @default(now())\n  user      User     @relation(fields: [userId], references: [id])\n}\n\nmodel KnorrUserProfile {\n  id      String @id @default(cuid())\n  userId  String\n  profile String\n  user    User   @relation(fields: [userId], references: [id])\n}\n\nmodel Comment {\n  id        String   @id @default(cuid())\n  userId    String\n  postId    String\n  content   String\n  createdAt DateTime @default(now())\n  user      User     @relation(fields: [userId], references: [id])\n}\n\nmodel ShoppingList {\n  id     String @id @default(cuid())\n  userId String\n  items  String\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel FridgeItem {\n  id       String @id @default(cuid())\n  userId   String\n  name     String\n  quantity Int\n  user     User   @relation(fields: [userId], references: [id])\n}\n\nmodel Stat {\n  id     String @id @default(cuid())\n  userId String\n  data   String\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel KnorrReward {\n  id     String @id @default(cuid())\n  name   String\n  userId String\n  user   User   @relation(fields: [userId], references: [id])\n}\n\nmodel UserChallenge {\n  id        String @id @default(cuid())\n  userId    String\n  challenge String\n  user      User   @relation(fields: [userId], references: [id])\n}\n",
  "inlineSchemaHash": "4c34d4ee69515399d72106ac5ca74b05c08575ee752ce173245e07d30c896fdb",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"displayName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"allergies\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferences\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dietStyle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"productsToAvoid\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"budget\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"knorrPosts\",\"kind\":\"object\",\"type\":\"KnorrPost\",\"relationName\":\"KnorrPostToUser\"},{\"name\":\"knorrUserProfiles\",\"kind\":\"object\",\"type\":\"KnorrUserProfile\",\"relationName\":\"KnorrUserProfileToUser\"},{\"name\":\"comments\",\"kind\":\"object\",\"type\":\"Comment\",\"relationName\":\"CommentToUser\"},{\"name\":\"shoppingLists\",\"kind\":\"object\",\"type\":\"ShoppingList\",\"relationName\":\"ShoppingListToUser\"},{\"name\":\"fridgeItems\",\"kind\":\"object\",\"type\":\"FridgeItem\",\"relationName\":\"FridgeItemToUser\"},{\"name\":\"stats\",\"kind\":\"object\",\"type\":\"Stat\",\"relationName\":\"StatToUser\"},{\"name\":\"rewards\",\"kind\":\"object\",\"type\":\"KnorrReward\",\"relationName\":\"KnorrRewardToUser\"},{\"name\":\"challenges\",\"kind\":\"object\",\"type\":\"UserChallenge\",\"relationName\":\"UserToUserChallenge\"}],\"dbName\":null},\"KnorrPost\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KnorrPostToUser\"}],\"dbName\":null},\"KnorrUserProfile\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"profile\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KnorrUserProfileToUser\"}],\"dbName\":null},\"Comment\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"CommentToUser\"}],\"dbName\":null},\"ShoppingList\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"items\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ShoppingListToUser\"}],\"dbName\":null},\"FridgeItem\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantity\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"FridgeItemToUser\"}],\"dbName\":null},\"Stat\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"data\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"StatToUser\"}],\"dbName\":null},\"KnorrReward\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"KnorrRewardToUser\"}],\"dbName\":null},\"UserChallenge\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"challenge\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"user\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"UserToUserChallenge\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

